#=================================================
# Description: Build V2X2 using GitHub Actions
# Lisence: MPL-2.0
# Peace and joy
#=================================================

name: Actions-V2X2

on:
  workflow_dispatch:
  schedule:
   - cron: 0 16 * * *

env:
  SOURCE_URL: https://github.com/XTLS/Xray-core.git
  UPLOAD_RELEASE: true
  BIN_TAG: V2X2
  TARGET_OS: ${{ secrets.TARGET_OS }}
  TARGET_ARCH: ${{ secrets.TARGET_ARCH }}
  BIN_NAME: ${{ secrets.BIN_NAME }}
  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      GOOS: ${{ secrets.TARGET_OS }}
      GOARCH: ${{ secrets.TARGET_ARCH }}

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq full-upgrade
        sudo -E apt-get -qq install curl zip unzip golang golang-go
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $SOURCE_URL v2x2
        ln -sf /workdir/v2x2 $GITHUB_WORKSPACE/v2x2

    - name: Replace Custom to Commit ID
      run: |
        cd $GITHUB_WORKSPACE/v2x2/
        sed -i '/build/ s/Custom/''/' $GITHUB_WORKSPACE/v2x2/core/core.go
        sed -i '/codename/ s/Xray, Penetrates Everything./''/' $GITHUB_WORKSPACE/v2x2/core/core.go
        sed -i '/intro/ s/A unified platform for anti-censorship./''/' $GITHUB_WORKSPACE/v2x2/core/core.go
        sed -i '/serial.Concat/ s/Xray/'${{ secrets.BIN_NAME }}'/' $GITHUB_WORKSPACE/v2x2/core/core.go

    - name: Build V2X2-binary
      run: |
        go version
        cd $GITHUB_WORKSPACE/v2x2
        go clean -modcache
        go mod download
        CGO_ENABLED=0  go build -o ${{ secrets.BIN_NAME }} -trimpath -ldflags "-s -w -buildid=" ./main

    - name: Organize Files
      run: |
        export BUILD_DATE=$(date +"%Y-%m-%d")
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        cd v2x2
        curl --retry 10 --retry-max-time 60 -L -H "Cache-Control: no-cache" -fsSL github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat -o geosite.dat
        curl --retry 10 --retry-max-time 60 -L -H "Cache-Control: no-cache" -fsSL github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat -o geoip.dat

    - name: Compress Bin Folder
      run: |
        cd $GITHUB_WORKSPACE/v2x2
        zip ${{ env.BIN_TAG }}.zip ${{ secrets.BIN_NAME }} geosite.dat geoip.dat

    - name: Deploy Files To Release
      uses: ncipollo/release-action@main
      if: env.UPLOAD_RELEASE == 'true'
      with:
        name: ${{ env.BIN_TAG }}
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.BIN_TAG }}
        body: ${{ env.BUILD_DATE }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: v2x2/${{ env.BIN_TAG }}.zip
